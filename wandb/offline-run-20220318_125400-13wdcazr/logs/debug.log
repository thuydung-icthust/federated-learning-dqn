2022-03-18 12:54:00,661 INFO    MainThread:46371 [wandb_setup.py:_flush():75] Loading settings from /home/aiotlab/.config/wandb/settings
2022-03-18 12:54:00,661 INFO    MainThread:46371 [wandb_setup.py:_flush():75] Loading settings from /mnt/disk1/dungnt/federated-learning-dqn/wandb/settings
2022-03-18 12:54:00,661 INFO    MainThread:46371 [wandb_setup.py:_flush():75] Loading settings from environment variables: {}
2022-03-18 12:54:00,661 INFO    MainThread:46371 [wandb_setup.py:_flush():75] Inferring run settings from compute environment: {'program_relpath': 'train.py', 'program': '/mnt/disk1/dungnt/federated-learning-dqn/train.py'}
2022-03-18 12:54:00,661 INFO    MainThread:46371 [wandb_init.py:_log_setup():405] Logging user logs to /mnt/disk1/dungnt/federated-learning-dqn/wandb/offline-run-20220318_125400-13wdcazr/logs/debug.log
2022-03-18 12:54:00,662 INFO    MainThread:46371 [wandb_init.py:_log_setup():406] Logging internal logs to /mnt/disk1/dungnt/federated-learning-dqn/wandb/offline-run-20220318_125400-13wdcazr/logs/debug-internal.log
2022-03-18 12:54:00,662 INFO    MainThread:46371 [wandb_init.py:init():439] calling init triggers
2022-03-18 12:54:00,662 INFO    MainThread:46371 [wandb_init.py:init():442] wandb.init called with sweep_config: {}
config: {'num_rounds': 1000, 'num_clients': 10, 'clients_per_round': 10, 'batch_size': 10, 'num_epochs': 5, 'path_data_idx': 'dataset_idx/chexpert/CheXpert-noniid-mnist_equal_sample_1.json', 'learning_rate': 0.01, 'algorithm': '', 'mu': 0.01, 'seed': 10, 'drop_percent': 0.0, 'num_core': 6, 'log_dir': './', 'train_mode': 'benchmark', 'dataset_name': 'chexpert', 'beta': 0.45, 'hidden_dim': 256, 'init_w': 0.001, 'value_lr': 0.001, 'policy_lr': 0.0001, 'max_steps': 800, 'max_frames': 12000, 'batch_size_ddpg': 4, 'gamma': 0.99, 'soft_tau': 0.02, 'path_data_valid_idx': 'dataset_idx/mnist/equal/MNIST-noniid-fedavg_equal_1.json'}
2022-03-18 12:54:00,662 INFO    MainThread:46371 [wandb_init.py:init():492] starting backend
2022-03-18 12:54:00,662 INFO    MainThread:46371 [backend.py:_multiprocessing_setup():99] multiprocessing start_methods=fork,spawn,forkserver, using: spawn
2022-03-18 12:54:00,672 INFO    MainThread:46371 [backend.py:ensure_launched():219] starting backend process...
2022-03-18 12:54:00,679 INFO    MainThread:46371 [backend.py:ensure_launched():224] started backend process with pid: 46654
2022-03-18 12:54:00,680 INFO    MainThread:46371 [wandb_init.py:init():501] backend started and connected
2022-03-18 12:54:00,688 INFO    MainThread:46371 [wandb_init.py:init():565] updated telemetry
2022-03-18 12:54:00,712 INFO    MainThread:46371 [wandb_init.py:init():625] starting run threads in backend
2022-03-18 12:54:03,856 WARNING MainThread:46371 [wandb_init.py:init():975] interrupted
Traceback (most recent call last):
  File "/home/aiotlab/anaconda3/envs/thanhnt_vaipe/lib/python3.9/site-packages/wandb/sdk/wandb_init.py", line 954, in init
    run = wi.init()
  File "/home/aiotlab/anaconda3/envs/thanhnt_vaipe/lib/python3.9/site-packages/wandb/sdk/wandb_init.py", line 636, in init
    _ = backend.interface.communicate_run_start(run_obj)
  File "/home/aiotlab/anaconda3/envs/thanhnt_vaipe/lib/python3.9/site-packages/wandb/sdk/interface/interface.py", line 221, in communicate_run_start
    result = self._communicate_run_start(run_start)
  File "/home/aiotlab/anaconda3/envs/thanhnt_vaipe/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 432, in _communicate_run_start
    result = self._communicate(rec)
  File "/home/aiotlab/anaconda3/envs/thanhnt_vaipe/lib/python3.9/site-packages/wandb/sdk/interface/interface_shared.py", line 222, in _communicate
    return self._communicate_async(rec, local=local).get(timeout=timeout)
  File "/home/aiotlab/anaconda3/envs/thanhnt_vaipe/lib/python3.9/site-packages/wandb/sdk/interface/router.py", line 37, in get
    is_set = self._object_ready.wait(timeout)
  File "/home/aiotlab/anaconda3/envs/thanhnt_vaipe/lib/python3.9/threading.py", line 574, in wait
    signaled = self._cond.wait(timeout)
  File "/home/aiotlab/anaconda3/envs/thanhnt_vaipe/lib/python3.9/threading.py", line 316, in wait
    gotit = waiter.acquire(True, timeout)
KeyboardInterrupt
