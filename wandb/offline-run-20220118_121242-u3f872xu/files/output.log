>>> START RUNNING:  - Train mode:  - Dataset: mnist
Init State dim 4
Init Action dim 4
ROUND:  0
[1, 1]
Backend MacOSX is interactive backend. Turning interactive mode on.
  0% 0/1000 [00:00<?, ?it/s]/Users/thuydungnguyen/workspace/LAB/DQN-FL/LongND-FL-Parallel-Computing/ddpg_agent/utils.py:24: FutureWarning: The input object of type 'Tensor' is an array-like implementing one of the corresponding protocols (`__array__`, `__array_interface__` or `__array_struct__`); but not a sequence (or 0-D). In the future, this object will be coerced as if it was first converted using `np.array(obj)`. To retain the old behaviour, you have to either modify the type 'Tensor', or assign to an empty array created with `np.empty(correct_shape, dtype=object)`.
  losses = np.asarray(losses).reshape((len(epochs), 1))
/Users/thuydungnguyen/workspace/LAB/DQN-FL/LongND-FL-Parallel-Computing/ddpg_agent/utils.py:24: VisibleDeprecationWarning: Creating an ndarray from ragged nested sequences (which is a list-or-tuple of lists-or-tuples-or ndarrays with different lengths or shapes) is deprecated. If you meant to do this, you must specify 'dtype=object' when creating the ndarray.
  losses = np.asarray(losses).reshape((len(epochs), 1))
  0% 0/1000 [01:44<?, ?it/s]
Traceback (most recent call last):
  File "/Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pydev/pydevd.py", line 1448, in _exec
    pydev_imports.execfile(file, globals, locals)  # execute the script
  File "/Applications/PyCharm CE.app/Contents/plugins/python-ce/helpers/pydev/_pydev_imps/_pydev_execfile.py", line 18, in execfile
    exec(compile(contents+"\n", file, 'exec'), glob, loc)
  File "/Users/thuydungnguyen/workspace/LAB/DQN-FL/LongND-FL-Parallel-Computing/train.py", line 284, in <module>
    main(args)
  File "/Users/thuydungnguyen/workspace/LAB/DQN-FL/LongND-FL-Parallel-Computing/train.py", line 200, in main
    dqn_weights = agent.get_action(mean_local_losses, std_local_losses, local_n_sample, dqn_list_epochs, done, clients_id=train_clients)
  File "/Users/thuydungnguyen/workspace/LAB/DQN-FL/LongND-FL-Parallel-Computing/ddpg_agent/ddpg.py", line 139, in get_action
    state = get_state(losses=local_losses, std_local_losses=std_local_losses,epochs=local_num_epochs, num_samples=local_n_samples, clients_id=clients_id)
  File "/Users/thuydungnguyen/workspace/LAB/DQN-FL/LongND-FL-Parallel-Computing/ddpg_agent/utils.py", line 26, in get_state
    normalized_losses = np.asarray(losses)/(np.linalg.norm(losses))
TypeError: unsupported operand type(s) for /: 'numpy.ndarray' and 'Tensor'