>>> START RUNNING:  - Train mode:  - Dataset: mnist
Init State dim 4
Init Action dim 4
ROUND:  0
[1, 1]
Backend MacOSX is interactive backend. Turning interactive mode on.
  0% 0/1000 [00:00<?, ?it/s]Process SpawnPoolWorker-2:
Process SpawnPoolWorker-3:
Process SpawnPoolWorker-5:
Process SpawnPoolWorker-6:
Process SpawnPoolWorker-4:
Process SpawnPoolWorker-7:
  0% 0/1000 [02:23<?, ?it/s]
Traceback (most recent call last):
Traceback (most recent call last):
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/queues.py", line 365, in get
    with self._rlock:
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
Traceback (most recent call last):
KeyboardInterrupt
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
Traceback (most recent call last):
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/queues.py", line 365, in get
    with self._rlock:
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/synchronize.py", line 95, in __enter__
    retu  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/pool.py", line 114, in worker
    task = get()
Traceback (most recent call last):
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/queues.py", line 365, in get
    with self._rlock:
Traceback (most recent call last):
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
  File "/Users/thuydungnguyen/workspace/LAB/DQN-FL/LongND-FL-Parallel-Computing/train.py", line 300, in <module>
    main(args)
  File "/Users/thuydungnguyen/workspace/LAB/DQN-FL/LongND-FL-Parallel-Computing/train.py", line 207, in main
    mean_local_losses, std_local_losses = get_mean_losses(train_local_loss, num_cli)
  File "/Users/thuydungnguyen/workspace/LAB/DQN-FL/LongND-FL-Parallel-Computing/utils/utils.py", line 331, in get_mean_losses
    means = [torch.sum(local_train_losses[i:, ]) /
KeyboardInterrupt
KeyboardInterrupt
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/queues.py", line 366, in get
    res = self._reader.recv_bytes()
rn self._semlock.__enter__()
Traceback (most recent call last):
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/connection.py", line 221, in recv_bytes
    buf = self._recv_bytes(maxlength)
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/connection.py", line 419, in _recv_bytes
    buf = self._recv(4)
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/connection.py", line 384, in _recv
    chunk = read(handle, remaining)
KeyboardInterrupt
KeyboardInterrupt
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/process.py", line 315, in _bootstrap
    self.run()
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/queues.py", line 365, in get
    with self._rlock:
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/process.py", line 108, in run
    self._target(*self._args, **self._kwargs)
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/pool.py", line 114, in worker
    task = get()
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/queues.py", line 365, in get
    with self._rlock:
  File "/Users/thuydungnguyen/opt/anaconda3/envs/sample-federated/lib/python3.9/multiprocessing/synchronize.py", line 95, in __enter__
    return self._semlock.__enter__()
KeyboardInterrupt